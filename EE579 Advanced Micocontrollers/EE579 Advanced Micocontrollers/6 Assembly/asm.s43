#include "msp430.h"                     ; #define controlled include file

            NAME    main                    ; module name

            PUBLIC  main                    ; make the main label vissible

            RSEG    CSTACK                  ; pre-declaration of segment
            RSEG    CODE                    ; place program in 'CODE' segment

init:       MOV     #SFE(CSTACK), SP        ; set up stack

main:       mov.w   #WDTPW+WDTHOLD,&WDTCTL  ; Stop WDT
SetupP1     bis.b   #001h,&P1DIR            ; P1.0 output
SetupC0     mov.w   #CCIE,&CCTL0            ; CCR0 interrupt enabled
            mov.w   #1000-1,&CCR0           ; CCR0 counts to 1000
SetupTA     mov.w   #TASSEL_1+MC_1,&TACTL   ; ACLK, upmode
                                            ;													
Mainloop    bis.w   #LPM3+GIE,SR            ; Enter LPM3, interrupts enabled
            nop                             ; Required for debugger
                                            ;
;-------------------------------------------------------------------------------
TA0_ISR;    Toggle P1.0
;-------------------------------------------------------------------------------
            xor.b   #001h,&P1OUT            ; Toggle P1.0
            reti                            ;		
                                            ;
;------------------------------------------------------------------------------
;           Interrupt Vectors
;------------------------------------------------------------------------------
            COMMON INTVEC
; Defaults to starting at 0

            ORG TIMER0_A0_VECTOR            ; Interrupt vector for Timer
            DC16 TA0_ISR                    ; Point to the Timer interrupt routine
            ORG RESET_VECTOR                ; Interrupt vector for reset
            DC16 init                       ; Point to initialisation code
            
            END